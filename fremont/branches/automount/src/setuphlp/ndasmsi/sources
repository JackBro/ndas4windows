TARGETNAME=ndasmsi
TARGETTYPE=DYNLINK
TARGETPATH=obj

USER_INCLUDES=$(NDAS_INC_PATH)
INCLUDES=..\inc;$(NDAS_PUBLIC_INC_PATH);$(PSDK_INC_PATH)

UMTYPE=windows
DLLDEF=$(O)\$(TARGETNAME).def
# Without DLLENTRY, you won't get DllMain run
DLLENTRY=_DllMainCRTStartup

C_DEFINES=/DUNICODE /D_UNICODE
USE_NATIVE_EH=1
USE_STL=1

!IF $(FREEBUILD)
USE_MSVCRT=1
!ELSE
USE_LIBCMT=1
DEBUG_CRTS=1
!ENDIF

PRECOMPILED_INCLUDE=stdafx.h
PRECOMPILED_CXX=1

TARGETLIBS= \
	$(NDAS_LIB_PATH)\libndasdi.lib \
	$(NDAS_LIB_PATH)\libndasautrs.lib \
	$(NDAS_LIB_PATH)\libndassyscfg.lib \
	$(NDAS_LIB_PATH)\libndascntenc.lib \
	$(NDAS_LIB_PATH)\libscrc32.lib \
	$(NDAS_LIB_PATH)\libxcrypt.lib \
	$(NDAS_LIB_PATH)\libxregcfg.lib \
	$(PSDK_LIB_PATH)\kernel32.lib \
	$(PSDK_LIB_PATH)\user32.lib \
	$(PSDK_LIB_PATH)\advapi32.lib \
	$(PSDK_LIB_PATH)\msi.lib \
	$(PSDK_LIB_PATH)\setupapi.lib \
    $(PSDK_LIB_PATH)\uuid.lib \
    $(PSDK_LIB_PATH)\ole32.lib \
    $(PSDK_LIB_PATH)\shlwapi.lib \
	$(PSDK_LIB_PATH)\crypt32.lib

SOURCES= \
	dllentry.cpp \
	ndmsica.cpp \
	shiconcache.cpp \
	misc.cpp \
	msilog.cpp \
	tokenparser.cpp \
	ndasec.cpp \
	ddinstca.cpp \
	stdca.cpp \
	upgradeca.cpp \
	procdlgact.cpp \
	ndmsica.rc

# It is not necessary to publish an export library for ndasmsi.dll 
# publish lib files to the project root
# PASS1_PUBLISH= {$(O)\$(TARGETNAME).lib=$(NDAS_LIB_PATH)\$(TARGETNAME).lib}

