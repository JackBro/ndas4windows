/*
* Copyright (C) XIMETA, Inc. All rights reserved.
*
*/
#ifndef LPX_IOCTL_H_INCLUDED
#define LPX_IOCTL_H_INCLUDED

#if _MSC_VER > 1000
#pragma once
#endif

#ifdef __cplusplus
extern "C" {
#endif

#define LPX_BOUND_DEVICE_NAME_PREFIX	L"\\Device\\Lpx"
#define SOCKETLPX_DEVICE_NAME			L"\\Device\\SocketLpx"
#define SOCKETLPX_DOSDEVICE_NAME		L"\\DosDevices\\SocketLpx"

#define FSCTL_LPX_BASE FILE_DEVICE_NETWORK

#define _LPX_CTL_CODE(function, method, access) \
	CTL_CODE(FSCTL_LPX_BASE, function, method, access)

typedef enum _LPX_IOCTL_CODES {
	IOCTL_LPX_QUERY_ADDRESS_LIST = _LPX_CTL_CODE(0, METHOD_NEITHER, FILE_ANY_ACCESS),
	IOCTL_LPX_SET_INFORMATION_EX = _LPX_CTL_CODE(1, METHOD_BUFFERED, FILE_WRITE_ACCESS),
	IOCTL_LPX_GET_RX_DROP_RATE = _LPX_CTL_CODE(100, METHOD_BUFFERED, FILE_ANY_ACCESS),
	IOCTL_LPX_SET_RX_DROP_RATE = _LPX_CTL_CODE(101, METHOD_BUFFERED, FILE_ANY_ACCESS),
	IOCTL_LPX_GET_TX_DROP_RATE = _LPX_CTL_CODE(102, METHOD_BUFFERED, FILE_ANY_ACCESS),
	IOCTL_LPX_SET_TX_DROP_RATE = _LPX_CTL_CODE(103, METHOD_BUFFERED, FILE_ANY_ACCESS),
	IOCTL_LPX_GET_VERSION = _LPX_CTL_CODE(0x201, METHOD_NEITHER, FILE_ANY_ACCESS),
} LPX_IOCTL_CODES;

typedef struct _LPX_DRIVER_VERSION {
	USHORT VersionMajor;
	USHORT VersionMinor;
	USHORT VersionBuild;
	USHORT VersionPrivate;
	UCHAR Reserved[16];
} LPX_DRIVER_VERSION, *PLPX_DRIVER_VERSION;

typedef LPX_DRIVER_VERSION LPXDRV_VER, *PLPXDRV_VER;

//
// Alway keep the same format with LS_TRANS_STAT in transport.h
//

typedef enum _LPX_TDI_DEVICE_CONTROL_CODES {
	LPXTDI_QUERY_CONNECTION_TRANSSTAT = 0x80000001,
	LPX_NDIS_QUERY_GLOBAL_STATS = 0x80000002,
} LPX_TDI_DEVICE_CONTROL_CODES;
	
typedef struct _LPX_CONNECTION_TRANS_STAT {
	ULONG Retransmits;
	ULONG PacketLoss;
} LPX_CONNECTION_TRANS_STAT, *PLPX_CONNECTION_TRANS_STAT;

typedef LPX_CONNECTION_TRANS_STAT TRANS_STAT, *PTRANSSTAT;

#ifdef __cplusplus
}
#endif

#endif /* LPX_IOCTL_H_INCLUDED */