<?xml version="1.0"?>
<Project InitialTargets="CheckRequiredProperties;WixTargetResolveRuntimeProperties" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!-- Some properties must be set in the main project file, before using this .TARGETS file -->
	<Target
		 Name="CheckRequiredProperties">

		<Error  Condition="'$(OutputName)'==''"
				Text="The &quot;OutputName&quot; property is not set in project &quot;$(MSBuildProjectFile)&quot;.  The OutputName defines the name of the output without a file extension. Please set this in the project file before the &lt;Import&gt; of the .Targets file."/>
		<Error  Condition="'$(OutputType)'==''"
				Text="The &quot;OutputType&quot; property is not set in project &quot;$(MSBuildProjectFile)&quot;.  The OutputType defines whether an msi, merge module, or wix library is being built. Please set this in the project file before the &lt;Import&gt; of the .Targets file. Possible values are 'package', 'module', 'library', and 'object'."/>
	</Target>

	<UsingTask TaskName="Candle" AssemblyFile="wixtasks.dll" />
	<UsingTask TaskName="Lit" AssemblyFile="wixtasks.dll" />
	<UsingTask TaskName="Light" AssemblyFile="wixtasks.dll" />

	<UsingTask TaskName="XIMETA.GetCurrentProjectFilePath" AssemblyFile="XIMETA.Tasks.dll" />

	<Target Name="WixTargetResolveRuntimeProperties">
		<XIMETA.GetCurrentProjectFilePath>
			<Output TaskParameter="FilePath" PropertyName="_Wix2TargetFilePath" />
		</XIMETA.GetCurrentProjectFilePath>
		<CreateProperty Value="$(MSBuildAllProjects);$(_Wix2TargetFilePath)">
			<Output TaskParameter="Value" PropertyName="MSBuildAllProjects" />
		</CreateProperty>
	</Target>

	<PropertyGroup>
		<!-- changed to the runtime property, see ResolveRuntimeProperties -->
		<!-- <MSBuildAllProjects>$(MSBuildAllProjects);$(_Wix2TargetFileDirectory)\wix2.targets</MSBuildAllProjects> -->
		<!--<MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildBinPath)\Wix.targets</MSBuildAllProjects>-->
	</PropertyGroup>

	<!-- Define the default file extensions -->
	<PropertyGroup>
		<TargetExt Condition="'$(OutputType)'=='package'">.msi</TargetExt>
		<TargetExt Condition="'$(OutputType)'=='module'">.msm</TargetExt>
		<TargetExt Condition="'$(OutputType)'=='library'">.wixlib</TargetExt>
		<IntermediateExt Condition="'$(IntermediateExt)'==''">.wixobj</IntermediateExt>
	</PropertyGroup>

	<!-- Default output type and path properties -->
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<OutputPath Condition=" '$(OutputPath)' == '' ">bin\$(Configuration)\</OutputPath>
		<OutDir>$(OutputPath)</OutDir>
		<!-- Example, bin\Debug\ -->
		<TargetName Condition=" '$(TargetName)' == '' ">$(OutputName)</TargetName>
		<!-- Example, MySetup -->
		<TargetFileName Condition=" '$(TargetFileName)' == '' ">$(TargetName)$(TargetExt)</TargetFileName>
		<!-- Example, MySetup.msi -->
		<TargetPath Condition=" '$(TargetPath)' == '' ">$(OutDir)$(TargetFileName)</TargetPath>
		<!-- Example, bin\Debug\MySetup.msi -->

		<!-- Properties for the intermediate object output -->
		<BaseOutputPath Condition=" '$(BaseOutputPath)' == '' ">obj\</BaseOutputPath>
		<!-- Example, obj\ -->
		<IntermediateOutputPath Condition=" '$(IntermediateOutputPath)' == '' ">$(BaseOutputPath)$(Configuration)\</IntermediateOutputPath>
		<!-- Example, obj\Debug\ -->

		<!-- Specify the Candle .wixobj if it isn't defined. If there is not supposed to be object output (ie. Only linking), don't set the object output. -->
		<CompileObjOutput Condition=" '$(CompileObjOutput)' == '' And '$(NoObjOutputDefault)' != 'true' ">$(IntermediateOutputPath)$(OutputName)$(IntermediateExt)</CompileObjOutput>
		<!-- Example, obj\Debug\MySetup.wixobj -->
	</PropertyGroup>

	<!-- Default Lib properties copied from the Compile properties. -->
	<PropertyGroup>
		<LibNoLogo Condition="'$(LibNoLogo)'==''">$(NoLogo)</LibNoLogo>
		<LibExtension Condition="'$(LibExtension)'==''">@(Extension)</LibExtension>
		<LibSuppressSchemaValidation Condition="'$(LibSuppressSchemaValidation)'==''">$(SuppressSchemaValidation)</LibSuppressSchemaValidation>
		<LibSuppressIntermediateFileVersionMatching Condition="'$(LibSuppressIntermediateFileVersionMatching)'==''">$(SuppressIntermediateFileVersionMatching)</LibSuppressIntermediateFileVersionMatching>
		<LibSuppressAllWarnings Condition="'$(LibSuppressAllWarnings)'==''">$(SuppressAllWarnings)</LibSuppressAllWarnings>
		<LibUseSmallTableDefinitions Condition="'$(LibUseSmallTableDefinitions)'==''">$(UseSmallTableDefinitions)</LibUseSmallTableDefinitions>
		<LibTreatWarningsAsErrors Condition="'$(LibTreatWarningsAsErrors)'==''">$(TreatWarningsAsErrors)</LibTreatWarningsAsErrors>
		<LibWarningLevel Condition="'$(LibWarningLevel)'==''">$(WarningLevel)</LibWarningLevel>
		<LibVerboseOutput Condition="'$(LibVerboseOutput)'==''">$(VerboseOutput)</LibVerboseOutput>
		<LibVerboseOutputLevel Condition="'$(LibVerboseOutputLevel)'==''">$(VerboseOutputLevel)</LibVerboseOutputLevel>
	</PropertyGroup>

	<!-- Default Linker properties copied from the Compile properties. -->
	<PropertyGroup>
		<LinkerNoLogo Condition="'$(LinkerNoLogo)'==''">$(NoLogo)</LinkerNoLogo>
		<LinkerExtension Condition="'$(LinkerExtension)'==''">@(Extension)</LinkerExtension>
		<LinkerSuppressSchemaValidation Condition="'$(LinkerSuppressSchemaValidation)'==''">$(SuppressSchemaValidation)</LinkerSuppressSchemaValidation>
		<LinkerSuppressIntermediateFileVersionMatching Condition="'$(LinkerSuppressIntermediateFileVersionMatching)'==''">$(SuppressIntermediateFileVersionMatching)</LinkerSuppressIntermediateFileVersionMatching>
		<LinkerSuppressAllWarnings Condition="'$(LinkerSuppressAllWarnings)'==''">$(SuppressAllWarnings)</LinkerSuppressAllWarnings>
		<LinkerUseSmallTableDefinitions Condition="'$(LinkerUseSmallTableDefinitions)'==''">$(UseSmallTableDefinitions)</LinkerUseSmallTableDefinitions>
		<LinkerTreatWarningsAsErrors Condition="'$(LinkerTreatWarningsAsErrors)'==''">$(TreatWarningsAsErrors)</LinkerTreatWarningsAsErrors>
		<LinkerWarningLevel Condition="'$(LinkerWarningLevel)'==''">$(WarningLevel)</LinkerWarningLevel>
		<LinkerVerboseOutput Condition="'$(LinkerVerboseOutput)'==''">$(VerboseOutput)</LinkerVerboseOutput>
		<LinkerVerboseOutputLevel Condition="'$(LinkerVerboseOutputLevel)'==''">$(VerboseOutputLevel)</LinkerVerboseOutputLevel>
	</PropertyGroup>

	<!-- Compile the wxs source. -->
	<PropertyGroup>
		<CompileDependsOn>PrepareForBuild</CompileDependsOn>
	</PropertyGroup>

	<Target
		 Name="Compile"
		 Inputs="@(Compile);
				 $(MSBuildAllProjects);
				 @(CustomAdditionalCompileInputs);
				 @(AdditionalCandleInput)"
		 Outputs="@(CustomAdditionalCompileOutputs);
				  @(AdditionalCandleOutput);
				  @(Compile -> '$(IntermediateOutputPath)%(Filename).wixobj')"
		 DependsOnTargets="$(CompileDependsOn)"
		 Condition="'@(Compile)'!=''">

		<CreateItem Include="$(DefineConstants)">
			<Output TaskParameter="Include" ItemName="DefineConstantsItem" />
		</CreateItem>
		<Message Text="DefineConstants:" />
		<Message Text="  %(DefineConstantsItem.identity)" />
		<!--<Message Text="SourceFiles:" />
			<Message Text="  %(Compile.identity)" />-->
		<Candle
			 SourceFiles="@(Compile)"
			 DefineConstants="$(DefineConstants)"
			 PreprocessToStdOut="$(PreprocessToStdOut)"
			 PreprocessToFile="$(PreprocessToFile)"
			 IncludeSearchPaths="@(IncludeSearchPath)"
			 NoLogo="$(NoLogo)"
			 OutputFile="$(IntermediateOutputPath)"
			 SuppressSchemaValidation="$(SuppressSchemaValidation)"
			 UseSmallTableDefinitions="$(UseSmallTableDefinitions)"
			 ShowSourceTrace="$(ShowSourceTrace)"
			 Extensions="@(CompileExtension)"
			 SuppressAllWarnings="$(SuppressAllWarnings)"
			 SuppressWarnings="$(SuppressWarnings)"
			 TreatWarningsAsErrors="$(TreatWarningsAsErrors)"
			 WarningLevel="$(WarningLevel)"
			 VerboseOutput="$(VerboseOutput)"
			 VerboseOutputLevel="$(VerboseOutputLevel)"
			 ToolPath="$(ToolPath)"
			 />
	</Target>

	<PropertyGroup>
		<!-- Don't depend on the Compile task because Lib can be run from a different project than the compile. -->
		<LibDependsOn>PrepareForBuild</LibDependsOn>
	</PropertyGroup>
	<Target
		 Name="Lib"
		 Inputs="@(Compile);
				 @(WixObject);
				 $(MSBuildAllProjects);
				 @(AdditionalLitInput)"
		 Outputs="$(OutDir)$(TargetFileName);@(AdditionalLitOutput)"
		 DependsOnTargets="$(LibDependsOn)"
		 Condition=" '$(OutputType)' == 'library' ">

		<!--<Message Text="ObjectFiles:" />
			<Message Text="  %(WixObject.identity)" />
			<Message Text="  %(WixLibrary.identity)" />
			<Message Text="  @(Compile -> '$(IntermediateOutputPath)%(Filename).wixobj')" />-->
		<Message Text="Creating $(Outdir)$(TargetFileName)" />
		<Lit
			 ObjectFiles="@(WixObject);@(WixLibrary);@(Compile -> '$(IntermediateOutputPath)%(Filename).wixobj')"
			 NoLogo="$(LibNoLogo)"
			 OutputFile="$(OutDir)$(TargetFileName)"
			 Extensions="@(LibExtension)"
			 SuppressSchemaValidation="$(LibSuppressSchemaValidation)"
			 SuppressIntermediateFileVersionMatching="$(LibSuppressIntermediateFileVersionMatching)"
			 SuppressAllWarnings="$(LibSuppressAllWarnings)"
			 UseSmallTableDefinitions="$(LibUseSmallTableDefinitions)"
			 TreatWarningsAsErrors="$(LibTreatWarningsAsErrors)"
			 WarningLevel="$(LibWarningLevel)"
			 VerboseOutput="$(LibVerboseOutput)"
			 VerboseOutputLevel="$(LibVerboseOutputLevel)"
			 ToolPath="$(ToolPath)"
			 />
	</Target>

	<PropertyGroup>
		<!-- Don't depend on the Compile task because Link can be run from a different project than the compile. -->
		<LinkDependsOn>PrepareForBuild</LinkDependsOn>
	</PropertyGroup>
	<Target
		 Name="Link"
		 Inputs="@(Compile);
				 @(WixObject);
				 @(WixLibrary);
				 @(AdditonalLightInput);
				 $(MSBuildAllProjects)"
		 Outputs="$(OutDir)$(TargetFileName);@(AdditonalLightOutput)"
		 DependsOnTargets="$(LinkDependsOn)"
		 Condition=" '$(OutputType)'=='package' Or '$(OutputType)'=='module' ">

		<!--<Message Text="ObjectFiles:" />
			<Message Text="  %(WixObject.identity)" />
			<Message Text="  %(WixLibrary.identity)" />
			<Message Text="  $(IntermediateOutputPath)%(Compile.Filename).wixobj" />
			<Message Text="LocalizationFile:" />
			<Message Text="  %(LocalizationFile.Identity)" />-->
		<Message Text="Creating $(OutDir)$(TargetFileName)" />
		<Light
			 ObjectFiles="@(WixObject);@(WixLibrary);@(Compile -> '$(IntermediateOutputPath)%(Filename).wixobj')"
			 BaseInputPath="$(BaseInputPath)"
			 CabinetCache="$(CabinetCache)"
			 Extensions="@(LinkExtension)"
			 BaseUncompressedImagesOutputPath="$(BaseUncompressedImagesOutputPath)"
			 LocalizationFiles="@(LocalizationFile)"
			 NoLogo="$(LinkerNoLogo)"
			 LeaveTemporaryFiles="$(LeaveTemporaryFiles)"
			 ReuseCabinetCache="$(ReuseCabinetCache)"
			 OutputFile="$(OutDir)$(TargetFileName)"
			 OutputAsXml="$(OutputAsXml)"
			 SuppressDefaultAdminSequenceActions="$(SuppressDefaultAdminSequenceActions)"
			 SuppressDefaultAdvSequenceActions="$(SuppressDefaultAdvSequenceActions)"
			 SuppressAssemblies="$(SuppressAssemblies)"
			 SuppressFiles="$(SuppressFiles)"
			 SuppressLayout="$(SuppressLayout)"
			 SuppressSchemaValidation="$(LinkerSuppressSchemaValidation)"
			 SuppressDefaultUISequenceActions="$(SuppressDefaultUISequenceActions)"
			 SuppressIntermediateFileVersionMatching="$(LinkerSuppressIntermediateFileVersionMatching)"
			 SuppressWarnings="$(LinkerSuppressWarnings)"
			 SuppressAllWarnings="$(LinkerSuppressAllWarnings)"
			 UseSmallTableDefinitions="$(LinkerUseSmallTableDefinitions)"
			 TreatWarningsAsErrors="$(LinkerTreatWarningsAsErrors)"
			 WarningLevel="$(LinkerWarningLevel)"
			 VerboseOutput="$(LinkerVerboseOutput)"
			 VerboseOutputLevel="$(LinkerVerboseOutputLevel)"
			 ToolPath="$(ToolPath)"
			 >
			<Output TaskParameter="OutputFile" ItemName="LightOutputFile" />
		</Light>
		<OnError ExecuteTargets="DeleteLinkOutputs" />
	</Target>

	<Target Name="DeleteLinkOutputs">
		<Delete Files="$(OutDir)$(TargetFileName)" />
	</Target>

	<!-- Make the build directories. -->
	<Target Name="PrepareForBuild">
		<MakeDir Directories="$(IntermediateOutputPath);$(OutDir)"/>
	</Target>

	<PropertyGroup>
		<BuildDependsOn>PrepareForBuild;Compile;Link</BuildDependsOn>
	</PropertyGroup>

	<Target Name="Build" DependsOnTargets="$(BuildDependsOn)">
		<Message Text="Outputs: @(LightOutputFile)" />
	</Target>

	<PropertyGroup>
		<RebuildDependsOn>Clean;Build</RebuildDependsOn>
	</PropertyGroup>

	<Target Name="Rebuild" DependsOnTargets="$(RebuildDependsOn)">
	</Target>

	<!-- Clean task -->
	<PropertyGroup>
		<CleanDependsOn></CleanDependsOn>
	</PropertyGroup>

	<Target Name="Clean" DependsOnTargets="$(CleanDependsOn)">
		<CreateItem Include="$(OutDir)**\*.*">
			<Output TaskParameter="Include" ItemName="CleanTargetFiles" />
		</CreateItem>
		<CreateItem Include="$(IntermediateOutputPath)**\*.*">
			<Output TaskParameter="Include" ItemName="CleanTargetFiles" />
		</CreateItem>
		<Delete Files="@(CleanTargetFiles)" />
		<!--<Delete Files="$(OutDir)$(TargetFileName);$(CompileObjOutput);@(Compile -> '$(IntermediateOutputPath)%(Filename).wixobj')"/>-->
	</Target>

</Project>
